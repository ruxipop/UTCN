void Song3()  {
  
  lcd.clear();

int tempo = 130;
  
 
  int melody[] = {
 
  
    REST,2, REST,4, REST,8, NOTE_DS4,8, 
    NOTE_E4,-4, REST,8, NOTE_FS4,8, NOTE_G4,-4, REST,8, NOTE_DS4,8,
    NOTE_E4,-8, NOTE_FS4,8,  NOTE_G4,-8, NOTE_C5,8, NOTE_B4,-8, NOTE_E4,8, NOTE_G4,-8, NOTE_B4,8,   
    NOTE_AS4,2, NOTE_A4,-16, NOTE_G4,-16, NOTE_E4,-16, NOTE_D4,-16, 
    NOTE_E4,2, REST,4, REST,8, NOTE_DS4,4,
  
    NOTE_E4,-4, REST,8, NOTE_FS4,8, NOTE_G4,-4, REST,8, NOTE_DS4,8,
    NOTE_E4,-8, NOTE_FS4,8,  NOTE_G4,-8, NOTE_C5,8, NOTE_B4,-8, NOTE_G4,8, NOTE_B4,-8, NOTE_E5,8,
    NOTE_DS5,1,   
   
  };

  
      lcd.setCursor(1, 0);
      lcd.print("Now playing...");
      lcd.setCursor(0, 1);
      lcd.print("Pink Panther");
  int notes = sizeof(melody) / sizeof(melody[0]) / 2;
  
  int wholenote = (60000 * 4) / tempo;
  
  int divider = 0, noteDuration = 0;
  
    for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
 
      divider = melody[thisNote + 1];
      if (divider > 0) {
        noteDuration = (wholenote) / divider;
        
      } else if (divider < 0) {
        
        noteDuration = (wholenote) / abs(divider);
        noteDuration *= 1.5; 
      }
  
    
      tone(2, melody[thisNote], noteDuration * 0.9);
      delay(noteDuration);

      noTone(2);
    }
  }